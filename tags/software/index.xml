<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>software on MQTTIotStuff</title>
    <link>https://mqttiotstuff.github.io/tags/software/</link>
    <description>Recent content in software on MQTTIotStuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2008–2021, PFreydiere; all rights reserved.</copyright>
    <lastBuildDate>Fri, 07 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://mqttiotstuff.github.io/tags/software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating cross compile executable with RUST</title>
      <link>https://mqttiotstuff.github.io/post/rust-cross-compile/</link>
      <pubDate>Fri, 07 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://mqttiotstuff.github.io/post/rust-cross-compile/</guid>
      <description>Creating executable for small embedded application can be tedious, especially if the plateform is not supporting executing compilation toochains.
Creating cross executable with RUST In first place, creating an executable using rust is quite simple the typical steps are :
 use rustup to add the target plateform, using the triplet describing the hardware, and system use the cargo build --target &amp;lt;TRIPLET&amp;gt;  command line to build  Thank&amp;rsquo;s to the community , these command line are easy to use and launch.</description>
    </item>
    
  </channel>
</rss>
